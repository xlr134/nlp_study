#week4作业

#词典；每个词后方存储的是其词频，词频仅为示例，不会用到，也可自行修改
Dict = {"经常":0.1,
        "经":0.05,
        "有":0.1,
        "常":0.001,
        "有意见":0.1,
        "歧":0.001,
        "意见":0.2,
        "分歧":0.2,
        "见":0.05,
        "意":0.05,
        "见分歧":0.05,
        "分":0.1}

#待切分文本
sentence = "经常有意见分歧"

'''
递归实现全切分函数，输出根据字典能够切分出的所有的切分方式
'''
def all_cut(sentence, dict):
    target = []

    def recursion_cut(my_cut, i):
        # 终止条件，i == len(sentence)递归结束
        if i == len(sentence):
            target.append(my_cut)
            return
        # 从start位置遍历字符串
        for j in range(i+1, len(sentence)+1):
            word = sentence[i:j]
            if word in dict:  # 切分的词在字典中，加入当前切分，继续往后递归
                recursion_cut(my_cut + [word], j)
    # 递归切分开始
    recursion_cut([], 0)
    return target



#目标输出;顺序不重要
target = [
    ['经常', '有意见', '分歧'],
    ['经常', '有意见', '分', '歧'],
    ['经常', '有', '意见', '分歧'],
    ['经常', '有', '意见', '分', '歧'],
    ['经常', '有', '意', '见分歧'],
    ['经常', '有', '意', '见', '分歧'],
    ['经常', '有', '意', '见', '分', '歧'],
    ['经', '常', '有意见', '分歧'],
    ['经', '常', '有意见', '分', '歧'],
    ['经', '常', '有', '意见', '分歧'],
    ['经', '常', '有', '意见', '分', '歧'],
    ['经', '常', '有', '意', '见分歧'],
    ['经', '常', '有', '意', '见', '分歧'],
    ['经', '常', '有', '意', '见', '分', '歧']
]

if __name__ == '__main__':
    all_cuts = all_cut(sentence, Dict)
    for cut in all_cuts:
        print(cut)
