#词典；每个词后方存储的是其词频，词频仅为示例，不会用到，也可自行修改
Dict = {
    "经常": 0.1,
    "经": 0.05,
    "有": 0.1,
    "常": 0.001,
    "有意见": 0.1,
    "歧": 0.001,
    "意见": 0.2,
    "分歧": 0.2,
    "见": 0.05,
    "意": 0.05,
    "见分歧": 0.05,
    "分": 0.1
}
#待切分文本
sentence = "经常有意见分歧"


#实现全切分函数，输出根据字典能够切分出的所有的切分方式
def all_cut(sentence, Dict):
    n = len(sentence)
    # 用来存储从位置i到句尾的所有切分结果
    target = [[] for _ in range(n + 1)]

    # 从后向前填充 dp 数组
    for i in range(n - 1, -1, -1):
        for j in range(i + 1, n + 1):
            word = sentence[i:j]
            if word in Dict.keys():
                # 如果word在词表中，加入从j开始的所有切分方案
                for seg in target[j]:
                    target[i].append([word] + seg)  # 列表相加成为新的列表

    # 返回从句首开始的所有切分方案
    return target[0]


# 获取所有切分结果
segmented_results = all_cut(sentence, Dict)
# 输出所有切分结果
for seg in segmented_results:
    print(seg)

#目标输出;顺序不重要
target = [['经常', '有意见', '分歧'], ['经常', '有意见', '分', '歧'],
          ['经常', '有', '意见', '分歧'], ['经常', '有', '意见', '分', '歧'],
          ['经常', '有', '意', '见分歧'], ['经常', '有', '意', '见', '分歧'],
          ['经常', '有', '意', '见', '分', '歧'], ['经', '常', '有意见', '分歧'],
          ['经', '常', '有意见', '分', '歧'], ['经', '常', '有', '意见', '分歧'],
          ['经', '常', '有', '意见', '分', '歧'], ['经', '常', '有', '意', '见分歧'],
          ['经', '常', '有', '意', '见', '分歧'], ['经', '常', '有', '意', '见', '分', '歧']]
